# Generated by Django 4.2.6 on 2023-11-02 03:19

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('contact_number', models.CharField(max_length=255)),
                ('barangay', models.CharField(max_length=255)),
                ('postal_code', models.CharField(max_length=255)),
                ('address', models.TextField(max_length=255)),
                ('user_type', models.TextField(choices=[('FARMER', 'FARMER'), ('TRADER', 'TRADER')], default=('FARMER', 'FARMER'), help_text='Select user type of the user')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users_tbl',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('cart_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('order_quantity', models.IntegerField(default=1, null=True)),
                ('is_checkedOut', models.BooleanField(default=False)),
                ('date_ordered', models.DateField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Cart',
                'verbose_name_plural': 'Carts',
                'db_table': 'cart_tbl',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('supplier_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('supplier_name', models.CharField(max_length=255)),
                ('supplier_address', models.CharField(max_length=255)),
                ('supplier_postal_code', models.CharField(max_length=255)),
                ('supplier_barangay', models.CharField(max_length=255)),
                ('supplier_mobile_number', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Supplier',
                'verbose_name_plural': 'Suppliers',
                'db_table': 'supplier_tbl',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(db_index=True, max_length=255, null=True, unique=True)),
                ('cart', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.cart')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'db_table': 'order_tbl',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('item_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('item_name', models.CharField(max_length=255)),
                ('item_desc', models.TextField(max_length=500)),
                ('item_status', models.TextField(choices=[('GOOD CONDITION', 'GOOD CONDITION'), (' NOT IN GOOD CONDITION', 'NOT IN GOOD CONDITION')], default=('GOOD CONDITION', 'GOOD CONDITION'))),
                ('item_image', models.ImageField(null=True, upload_to='img/item_img')),
                ('item_quantity', models.IntegerField()),
                ('item_price', models.IntegerField(help_text='Item price per kilo', null=True)),
                ('item_date_added', models.DateField(auto_now_add=True)),
                ('item_measurement', models.CharField(choices=[('Kilogram', 'Kilogram'), ('Grams', 'Grams'), ('Ounces', 'Ounces')], default=('Kilogram', 'Kilogram'), max_length=255, null=True)),
                ('item_kilo_per_measurement', models.CharField(default='', max_length=255, null=True)),
                ('item_supplier', models.ForeignKey(default='Select Supplier', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.supplier')),
            ],
            options={
                'verbose_name': 'Item',
                'verbose_name_plural': 'Items',
                'db_table': 'item_tbl',
            },
        ),
        migrations.AddField(
            model_name='cart',
            name='item',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.item'),
        ),
    ]
